c
                token = JWT.encode({employer: employer.id}, "secret")
!!(employer && employer.authenticate(params["auth"]["password"]))
employer && employer.authenticate(params["auth"]["password"])
            employer = Employer.find_by(email: params["auth"]["email"])
            employer = Employer.find_by(email: params["auth"]["email"]))
            end
                render json: {employer: employer, token: token}
                token = JWT.encode({employer: employer.id}, "secret")
            if employer && employer.authenticate(params["auth"]["password"])
employer = Employer.find_by(email: params["auth"]["email"])
params
Employer.find_by(email: params["auth"]["email"])
user
c
user
c
params
exit
c
User.find(userId)
userId = JWT.decode(token, "secret")[0]["user"]
JWT.decode(token, "secret")
token
exit
c
userId = JWT.decode(token, "secret")
JWT.decode(token, "secret")
token
exit
@userApp.user.email
@userApp.user
@userApp
exit
portfolioItem.update(portfolio_item_params)
portfolio.update(portfolio_item_params)
portfolio_item_params
portfolioItem
exit
portfolioItem
